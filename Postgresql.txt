Lo primero que debemos hacer es instalar la aplicacion de escritorio
1- La abrimos (Pgadmin4) y nos manda a esta pagina http://127.0.0.1:63892/browser/
2- Le damos a databases/postgres y con click derecho a query tool y creamos la base de datos
3- Desde la consola del visual debemos instalar la biblioteca pip install psycopg2 para que sea compatible
4- Abrimos el archivo settings y en DATABASES cambiamos sql3 por postgresql_psycopg2
5- Cambiamos el NAME por el nombre de la base de datos 'NAME': 'articulosclientes',
6- Ponemos 'USER': 'postgres', 'PASSWORD': 'Hector6140','HOST': '127.0.0.1','DATABASE_PORT': '5432',
7- python manage.py makemigrations si no sale ningun error estam bien puestos los datos
8- python manage.py migrate y nos vamos a la web del principio y nos debe salir dentro de Schemas/Tables

INSERT desde consola
1- python manage.py shell
2- from gestionPedidos.models import Clientes
3- cli=Clientes(nombre='Hector', direccion='Mi casa', telefono='123456789') 
4- cli.save()

SENTENCIA WHERE
1- python manage.py shell
2- from gestionPedidos.models import Articulos
3- Articulos.objects.filter(seccion='deportes') debemos poner filter cuando queramos usar un where
4- Debemos crear un metodo dentro de la clase 
	def __str__(self):
        	return "El nombre es %s la seccion es %s y el precio es %s" %(self.nombre,self.seccion,self.precio)
5- exit()
6- python manage.py makemigrations
7- python manage.py migrate
8- python manage.py shell
9- HAcemos paso 2 y paso 3 y ya nos debe salir
10- Consultas complejas Articulos.objects.filter(nombre='mesa', seccion='decoracion') 
11- Articulos.objects.filter(seccion='decoracion', precio>100) ESTA MAL
12- Articulos.objects.filter(seccion='decoracion', precio__gte=100) MAYOR QUE
13- Articulos.objects.filter(seccion='decoracion', precio__lte=100) MENOR QUE
14- Articulos.objects.filter(seccion='decoracion', precio__range(10,60) ENTRE VARIOS VALORES
15- Articulos.objects.filter(seccion='decoracion', precio__gte=100).order_by('precio') PARA ORDENAR DE MENOR A MAYOR
16- Articulos.objects.filter(seccion='decoracion', precio__gte=100).order_by('-precio') ORDENAR AL REVES